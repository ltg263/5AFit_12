package com.jxkj.fit_5a.conpoment.utils;

import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.PathMeasure;
import android.graphics.RectF;
import android.graphics.drawable.BitmapDrawable;
import android.util.Log;

import com.jxkj.fit_5a.R;
import com.jxkj.fit_5a.app.MainApplication;

import java.util.List;


/**
 * Created by AuthorName on Mar 23, 2021.
 * Copyright  2021 CompanyName. All rights reserved.
 * <p>
 * Generated by PaintCode
 * http://www.paintcodeapp.com
 *
 * @author AuthorName
 */
public class StyleKitName {


    public static PathMeasure mPathMeasure;
    public static float[] mCurrentPosition;

    private static class CacheFor_1100900Canvas {
        private static Paint paint = new Paint();
        private static Path _2Path = new Path();
    }

    public static void draw_1100900Canvas(Canvas canvas, List<List<Double>> info) {
        Log.w("--->>>>>", "屏幕宽:" + canvas.getWidth());//1920
        Log.w("--->>>>>", "屏幕高:" + canvas.getHeight());//1080

        Log.w("--->>>>>", "矩形范围宽:" + canvas.getHeight()*3/2);//1920
        Log.w("--->>>>>", "矩形范围高:" + canvas.getHeight());//1080

        Log.w("--->>>>>", "矩形居中X起止:" + (canvas.getWidth()-canvas.getHeight()*3/2)/2);//1080
        Log.w("--->>>>>", "矩形居中X终止:" + ((canvas.getWidth()-canvas.getHeight()*3/2)/2+canvas.getHeight()*3/2));//1080
        Paint paint = CacheFor_1100900Canvas.paint;

        //屏幕宽:(1920-1620)/2
        //矩形范围宽:1620
        //
        RectF resizedFrame = new RectF((canvas.getWidth()-canvas.getHeight()*3/2)/2, 0f, (canvas.getWidth()-canvas.getHeight()*3/2)/2+canvas.getHeight()*3/2,  canvas.getHeight());
//        RectF mRectF = new RectF(0, 0f, canvas.getHeight()*3/2,  canvas.getHeight());
//        RectF resizedFrame = CacheFor_1100900Canvas.originalFrame;

//        StyleKitName.resizingBehaviorApply(resizing, CacheFor_1100900Canvas.originalFrame, targetFrame, resizedFrame);
//        RectF resizedFrame = resizingBehaviorApply(resizing, mRectF, new RectF(0f, 0f, 1200f, 900f));
        canvas.translate(resizedFrame.left+50, resizedFrame.top+50);
//        canvas.scale(0, 0);

        Path _2Path = CacheFor_1100900Canvas._2Path;
        _2Path.reset();
//        double hieghtBl = 1000/(canvas.getWidth()/2);
        double hieghtBl = 1;

        _2Path.moveTo((float) (info.get(0).get(0)/hieghtBl), (float) (info.get(0).get(1)/hieghtBl));
        for (int i = 0; i < info.size(); i++) {
            _2Path.lineTo((float) (info.get(i).get(0)/hieghtBl), (float) (info.get(i).get(1)/hieghtBl));
        }
        _2Path.close();
        paint.reset();
        paint.setFlags(Paint.ANTI_ALIAS_FLAG);
        paint.setStrokeWidth(5f);
        canvas.save();
        paint.setStyle(Paint.Style.STROKE);
        paint.setColor(MainApplication.getContext().getResources().getColor(R.color.color_text_theme));
        canvas.drawPath(_2Path, paint);
        if (mCurrentPosition == null) {
            mCurrentPosition = new float[2];
            mCurrentPosition[0] = (float) (info.get(0).get(0)/hieghtBl);
            mCurrentPosition[1] = (float) (info.get(0).get(1)/hieghtBl);
        }

        Bitmap bitmap = ((BitmapDrawable) MainApplication.getContext().getResources().getDrawable(R.drawable.ic_d_red)).getBitmap();
        bitmap = StringUtil.zoomImage(bitmap, 30, 50);
        canvas.drawBitmap(bitmap, mCurrentPosition[0] - 15, mCurrentPosition[1] - 50, paint);

        if (mPathMeasure == null) {
            mPathMeasure = new PathMeasure(_2Path, true);
        }

        canvas.restore();
    }

}